{"version":3,"sources":["components/ReCaptchaComponent.js","store/constants.js","data/initialState.js","config.js","store/actions/authRegActions.js","components/modals/AuthLogModal.js","store/reducers/dndReducer.js","store/actions/accessory.js","store/actions/contentActions.js","components/Link.js","components/modals/AddNewLinAndDelBlockkModals.js","components/Column.js","store/actions/dndActions.js","components/modals/SetBlockTitleModal.js","components/MainPage.js","store/reducers/contentReducer.js","store/reducers/authReducer.js","store/reducers/userStateReducer.js","store/index.js","index.js","components/App.js"],"names":["ReCaptchaComponent","props","executeRecaptcha","useGoogleReCaptcha","useState","isRobot","setRobotStatus","useEffect","then","res","children","CON","REGISTRATION_START","REGISTRATION_SUCCESS","REGISTRATION_FAILURE","AUTHORIZATION_START","AUTHORIZATION_SUCCESS","AUTHORIZATION_FAILURE","SET_USER_DATA","ADD_BLOCK","ADD_LINK","DEL_LINK","DEL_BLOCK","MOVE_COLUMN","MOVE_LINK_INSIDE_COLUMN","START_MOVE_LINK_BETWEEN_COLUMNS","FINISH_MOVE_LINK_BETWEEN_COLUMNS","SIGN_OUT","SIGN_MODAL_SHOW","SIGN_MODAL_HIDE","TRIM_ERROR_MESSAGE","HIDE_PICS","state","links","id","link","showPics","columns","title","linksIds","columnOrder","backHost","initialStateSave","registrationSuccess","token","type","payload","registrationOrAuthFailure","err","saveInintalUserState","fetch","method","headers","Authorization","body","JSON","stringify","console","log","saveUserChanges","newUserState","getUserToken","paramsToGetToken","qs","json","getUserData","registration","regName","regPass","dispatch","requestBody","name","password","a","response","message","code","Error","pass","cookies","setTimeout","registerAndGetToken","authorization","logName","logPass","userState","authAndGetUserData","trimErrorMessage","StyledBadgeDiv","styled","div","StyledBage","Badge","StyledFooter","Modal","Footer","StyledModal","AuthLogModal","setRegName","setRegPass","setLogName","setLogPass","action","setAction","logButtonText","setLogButtonText","wornMessage","setWornMessage","useCookies","setCookies","useDispatch","useSelector","registerError","userCookies","setModalShow","window","screen","pill","variant","onClick","size","aria-labelledby","centered","Header","closeButton","Title","Nav","Link","href","style","color","padding","fontSize","Body","Tab","Container","defaultActiveKey","Row","Col","sm","className","Item","eventKey","onSelect","selected","marginBottom","Content","Pane","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","onChange","e","setNameForRegistration","target","value","Button","dnd","initialState","push","blockKey","blockBody","parentColumnId","linkId","newLink","parentBlock","arrOfLinksIds","linksToBeDeleted","i","length","splice","findIndex","item","columnId","startColumn","startColumnLinksOrder","finishColumn","finishColumnLinksOrder","getActualStateAndSaveToDb","getState","addBlock","newBlock","addBlockAction","addLink","addLinkAction","hidePics","linkParams","hidePicsAction","dellLink","deletLinkAction","dellBlock","blockParams","deletBlockAction","index","deleteLink","isNoEmpty","hideOrShoePics","draggableId","provided","snapshot","Card","draggableProps","ref","innerRef","isDragging","dragHandleProps","cardSize","showGraphic","maxLine","minLine","header","description","url","ColumnControlBlock","clickPos","AddNewLinAndDelBlockkModals","showAddLinkModal","setShowAddLinkModal","showWornDelModal","setShowWornDelModal","setLink","clickPosition","setClickPosition","allLinks","printMousePos","event","clientX","document","querySelectorAll","filter","textContent","includes","forEach","addEventListener","width","show","onHide","autoFocus","restoreFocus","enforceFocus","marginRight","key","uniqid","isUrl","StyledCard","StyledCardTitle","TaskList","isDraggingOver","Column","isDropDisabled","column","textDecoration","droppableId","droppableProps","map","linkItem","indexItem","placeholder","moveColumn","newColumnOrder","moveColumnAction","moveLinkInsideColumn","newLinkOrder","moveLinkInsideColumnAction","finishMoveLinkBetweenColumns","finishMoveLinkBetweenColumnsAction","SetBlockTitleModal","setShow","blockTitle","setBlockTitle","handleClose","blockId","objToArr","Object","entries","MainPage","setStartColumnIndex","data","onDragStart","start","indexOf","source","onDragUpdate","update","destination","onDragEnd","result","Array","from","finish","newLinksIds","startLinksIds","finishLinksIds","direction","content","columnName","linkDescription","isModalShow","authError","userStateReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","reCaptchaKey","language","CookiesProvider","modalShow","isFetchData","setFetchData","AuthRegModalState","linkBoxName","linkBoxPass","getElementById"],"mappings":"6RAqBeA,MAff,SAA4BC,GAAQ,IAC1BC,EAAqBC,cAArBD,iBADyB,EAECE,mBAAS,IAFV,mBAE1BC,EAF0B,KAEjBC,EAFiB,KAQjC,OAJAC,qBAAU,WACRL,IAAmBM,MAAK,SAAAC,GAAG,OAAIH,EAAeG,QAC7C,IAGD,oCACGJ,GAAWJ,EAAMS,W,0CCOTC,EAvBH,CACVC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,qBAAsB,uBACtBC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,sBAAuB,wBACvBC,cAAe,gBACfC,UAAW,YACXC,SAAU,WACVC,SAAU,WACVC,UAAW,YACXC,YAAa,cACbC,wBAAyB,0BACzBC,gCAAiC,kCACjCC,iCAAkC,mCAClCC,SAAU,WACVC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,UAAW,aCpBAC,EAAQ,CACnBC,MAAO,CACL,SAAU,CAAEC,GAAI,SAAUC,KAAM,8EAA+EC,UAAU,GACzH,SAAU,CAAEF,GAAI,SAAUC,KAAM,kEAAmEC,UAAU,GAC7G,SAAU,CAAEF,GAAI,SAAUC,KAAM,2GAA4GC,UAAU,GACtJ,SAAU,CAAEF,GAAI,SAAUC,KAAM,sDAAuDC,UAAU,GACjG,SAAU,CAAEF,GAAI,SAAUC,KAAM,mCAAoCC,UAAU,GAC9E,SAAU,CAAEF,GAAI,SAAUC,KAAM,2DAA4DC,UAAU,GACtG,SAAU,CAAEF,GAAI,SAAUC,KAAM,iDAAkDC,UAAU,GAC5F,SAAU,CAAEF,GAAI,SAAUC,KAAM,8EAA+EC,UAAU,IAE3HC,QAAS,CACP,WAAY,CACVH,GAAI,WACJI,MAAO,eACPC,SAAU,CAAC,SAAU,SAAU,SAAU,WAE3C,WAAY,CACVL,GAAI,WACJI,MAAO,mBACPC,SAAU,CAAC,SAAU,WAEvB,WAAY,CACVL,GAAI,WACJI,MAAO,YACPC,SAAU,CAAC,SAAU,YAGzBC,YAAa,CAAC,WAAY,WAAY,aC1BzBC,EADE,oBCIXC,EAAmB,GAsBzB,SAASC,EAAoBC,GAC3B,MAAO,CACLC,KAAMlC,EAAIE,qBACViC,QAASF,GAWN,SAASG,EAA0BC,GACxC,MAAO,CACLH,KAAMlC,EAAIG,qBACVgC,QAAS,CAAEE,QAtCfN,EAAiBV,MAAQA,EA0ClB,IAAMiB,EAAuB,SAAAL,GAAK,OAAIM,MAAM,WAAD,OAAYT,EAAZ,YAAgC,CAChFU,OAAQ,OACRC,QAAS,CACPC,cAAc,OAAD,OAAST,GACtB,eAAgB,oBAElBU,KAAMC,KAAKC,UAAUd,KACpBlC,MAAK,SAAAC,GAAG,OAAIgD,QAAQC,IAAIjD,OAEdkD,EAAkB,SAACf,EAAOgB,GACrCV,MAAM,WAAD,OAAYT,EAAZ,YAAgC,CACnCU,OAAQ,OACRC,QAAS,CACPC,cAAc,OAAD,OAAST,GACtB,eAAgB,oBAElBU,KAAMC,KAAKC,UAAUI,KACpBpD,MAAK,SAAAC,GAAG,OAAIgD,QAAQC,IAAIjD,OAGvBoD,EAAe,SAAAC,GAAgB,OAAIZ,MAAM,WAAD,OAAYT,EAAZ,YAAgC,CAC5EU,OAAQ,OACRC,QAAS,CACP,eAAgB,qCAElBE,KAAMS,IAAGP,UAAUM,KAClBtD,MAAK,SAAAC,GAAG,OAAIA,EAAIuD,WAEbC,EAAc,SAAArB,GAAK,OAAIM,MAAM,WAAD,OAAYT,EAAZ,YAAgC,CAChEU,OAAQ,MACRC,QAAS,CACPC,cAAc,OAAD,OAAST,MAEvBpC,MAAK,SAAAC,GAAG,OAAIA,EAAIuD,WAEZ,SAASE,EAAT,GAA6C,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACtC,OAAO,SAACC,GACNA,EA5EK,CACLxB,KAAMlC,EAAIC,qBA6EV,IAAM0D,EAAc,CAClBC,KAAMJ,EACNK,SAAUJ,IAWa,uCAAG,sCAAAK,EAAA,+EARGvB,MAAM,yEAA0E,CAC7GC,OAAQ,OACRC,QAAS,CACP,eAAgB,qCAElBE,KAAMS,IAAGP,UAAUc,KAClB9D,MAAK,SAAAC,GAAG,OAAIA,EAAIuD,UAES,UAGlBU,EAHkB,OAIhBH,EAASG,EAATH,MAELG,EAASC,SAAqC,OAA1BD,EAASC,QAAQC,KANhB,sBAOhB,IAAIC,MAAM,8BAPM,cAUlBC,EAAOV,EACPN,EAAmB,CACvBS,OACAC,SAAUJ,GAbY,UAgBAP,EAAaC,GAhBb,iBAgBhBlB,EAhBgB,EAgBhBA,MACRyB,EAAS1B,EAAoB,CAAEC,QAAOmC,QAAS,CAACR,OAAMO,WACtDE,YAAW,WACT/B,EAAqBL,KACpB,KApBqB,kDAuBxByB,EAAStB,EAA0B,KAAM4B,UAvBjB,0DAAH,qDA2BzBM,IAIG,SAASC,EAAT,GAA8C,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACvC,OAAO,SAACf,GAENA,EAvHK,CACLxB,KAAMlC,EAAII,sBAwHV,IAAM+D,EAAOM,EACPb,EAAOY,EACPrB,EAAmB,CACvBS,KAAMY,EACNX,SAAUY,IAGY,uCAAG,kCAAAX,EAAA,+EAEAZ,EAAaC,GAFb,YAEjBY,EAFiB,QAGVC,QAHU,sBAGK,IAAIE,MAAMH,EAASC,SAHxB,cAIf/B,EAAU8B,EAAV9B,MAJe,SAKYqB,EAAYrB,GALxB,gBAKRyC,EALQ,EAKfrD,MACRqC,EAAS1B,EAAoB,CAAEC,QAAOmC,QAAS,CAACR,OAAMO,WACtDT,EAnHC,CACLxB,KAAM,gBACNC,QAiH0BuC,IAPC,kDASvBhB,EAAStB,EAA0B,KAAM4B,UATlB,0DAAH,qDAaxBW,IAsBG,SAASC,IACd,MAAO,CACL1C,KAAMlC,EAAImB,oB,o3BClKd,IAAM0D,EAAiBC,IAAOC,IAAV,KAKdC,EAAaF,YAAOG,IAAPH,CAAH,KAUVI,EAAeJ,YAAOK,IAAMC,OAAbN,CAAH,KAMZO,EAAcP,YAAOK,IAAPL,CAAH,KAiBF,SAASQ,EAAahG,GAAQ,IAAD,EACZG,mBAAS,IADG,mBACnC+D,EADmC,KAC1B+B,EAD0B,OAEZ9F,mBAAS,IAFG,mBAEnCgE,EAFmC,KAE1B+B,EAF0B,OAGZ/F,mBAAS,IAHG,mBAGnC+E,EAHmC,KAG1BiB,EAH0B,OAIZhG,mBAAS,IAJG,mBAInCgF,EAJmC,KAI1BiB,EAJ0B,OAKdjG,mBAAS,SALK,mBAKnCkG,EALmC,KAK3BC,EAL2B,OAMAnG,mBAAS,WANT,mBAMnCoG,EANmC,KAMpBC,EANoB,OAONrG,oBAAS,GAPH,gCAQJA,mBAAS,KARL,mBAQnCsG,EARmC,KAQtBC,EARsB,OAUZC,YAAW,CAAC,cAAe,gBAVf,oBAU1BC,IAV0B,aAYpCxC,GAAWyC,cAEXlE,GAAQmE,aAAY,SAAA/E,GAAK,OAAIA,EAAMkC,aAAatB,SAChDoE,GAAgBD,aAAY,SAAA/E,GAAK,OAAIA,EAAMkC,aAAa8C,iBACxDC,GAAcF,aAAY,SAAA/E,GAAK,OAAIA,EAAMkC,aAAaa,WAG9CgC,aAAY,SAAA/E,GAAK,OAAIA,KAYnCzB,qBAAU,WAENkG,EADE7D,GACe,WAEA,cAIrBrC,qBAAU,WACM,YAAVqC,IAAuBA,KAAUoE,IACnCH,GAAW,cAAeI,GAAY1C,MACtCsC,GAAW,cAAeI,GAAYnC,MACtC7E,EAAMiH,cAAa,KAEnBL,GAAW,cAAe,IAC1BA,GAAW,cAAe,OAE3B,CAACjE,KAEJrC,qBAAU,WACLyG,IAAeL,EAAeK,GAAchE,QAGjDzC,qBAAU,WACQ4G,OAAOC,UAkCzB,OACE,oCACE,kBAAC5B,EAAD,KACE,kBAACG,EAAD,CACE0B,MAAI,EACJC,QAAQ,OACRC,QA1E0B,WACV,YAAlBf,EACFnC,GDwFG,CACLxB,KAAMlC,EAAIiB,mBCvFRyC,GDgFG,CACLxB,KAAMlC,EAAIgB,WChFRkF,GAAW,cAAe,IAC1BA,GAAW,cAAe,OAsErBL,IAGL,kBAAC,EAAD,KACE,kBAACR,EAAD,iBACM/F,EADN,CAEEuH,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAER,kBAAC5B,EAAA,EAAM6B,OAAP,CAAcC,aAAW,GACvB,kBAAC9B,EAAA,EAAM+B,MAAP,CAAa3F,GAAG,iCAAhB,sBAEE,kBAAC4F,EAAA,EAAIC,KAAL,CACEC,KAAK,+DACLC,MAAO,CACLC,MAAO,MACPC,QAAS,IACTC,SAAU,SALd,oBAYJ,kBAACtC,EAAA,EAAMuC,KAAP,KACE,kBAACC,EAAA,EAAIC,UAAL,CAAerG,GAAG,oBAAoBsG,iBAAiB,SACrD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACb,EAAA,EAAD,CAAKR,QAAQ,QAAQsB,UAAU,eAC7B,kBAACd,EAAA,EAAIe,KAAL,KACE,kBAACf,EAAA,EAAIC,KAAL,CACEe,SAAS,QACTC,SAAU,SAACC,GACTzC,EAAUyC,GACVrC,EAAe,IACftC,GAASkB,OALb,6BAWF,kBAACuC,EAAA,EAAIe,KAAL,KACE,kBAACf,EAAA,EAAIC,KAAL,CACEe,SAAS,SACTC,SAAU,SAACC,GACTzC,EAAUyC,GACVrC,EAAe,IACftC,GAASkB,MAEX0C,MAAO,CAAEgB,aAAc,SAPzB,4BAcN,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACL,EAAA,EAAIY,QAAL,KACE,kBAACZ,EAAA,EAAIa,KAAL,CAAUL,SAAS,SACjB,kBAACM,EAAA,EAAD,CAAYR,UAAU,QACpB,kBAACQ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBpH,GAAG,6BAApB,mBAEF,kBAACqH,EAAA,EAAD,CACEC,aAAW,UACXC,mBAAiB,4BACjBC,SAAU,SAAAC,GAAC,OAnFJ,SAACA,GAC1BjD,IACFC,EAAe,IACftC,GAASkB,MAEXW,EAAWyD,GA8E0BC,CAAuBD,EAAEE,OAAOC,QAC/CA,MAAO3F,KAGX,kBAACiF,EAAA,EAAD,CAAYR,UAAU,QACpB,kBAACQ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBpH,GAAG,6BAApB,iBAEF,kBAACqH,EAAA,EAAD,CACE1G,KAAK,WACL2G,aAAW,UACXC,mBAAiB,4BACjBC,SAAU,SAAAC,GAAC,OAAIxD,EAAWwD,EAAEE,OAAOC,QACnCA,MAAO1F,MAIb,kBAACkE,EAAA,EAAIa,KAAL,CAAUL,SAAS,UACjB,kBAACM,EAAA,EAAD,CAAYR,UAAU,QACpB,kBAACQ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBpH,GAAG,6BAApB,8BAIF,kBAACqH,EAAA,EAAD,CACEC,aAAW,UACXC,mBAAiB,4BACjBC,SAAU,SAAAC,GAAC,OAAIvD,EAAWuD,EAAEE,OAAOC,QACnCA,MAAO3E,KAGX,kBAACiE,EAAA,EAAD,CAAYR,UAAU,QACpB,kBAACQ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBpH,GAAG,6BAApB,aAEF,kBAACqH,EAAA,EAAD,CACE1G,KAAK,WACL2G,aAAW,UACXC,mBAAiB,4BACjBC,SAAU,SAAAC,GAAC,OAAItD,EAAWsD,EAAEE,OAAOC,QACnCA,MAAO1E,WASvB,kBAACS,EAAD,KACE,yBAAKoC,MAAO,CAAEC,MAAO,QAClBxB,GAED,kBAACqD,EAAA,EAAD,CACExC,QAhKgB,WAC5B,GAAe,UAAXjB,EAAoB,CACtB,IAAKnC,IAAYC,EAEf,YADAuC,EAAe,8BAGjBtC,GAASH,EAAa,CAAEC,UAASC,kBAC5B,GAAe,WAAXkC,EAAqB,CAC9B,IAAKnB,IAAYC,EAEf,YADAuB,EAAe,8BAGjBtC,GAASa,EAAc,CAAEC,UAASC,aAEpCgB,EAAW,IACXC,EAAW,IACXH,EAAW,IACXC,EAAW,IACXQ,EAAe,IACftC,GAASkB,OA+Ie,UAAXe,EAAqB,UAAY,e,kEC1LnC0D,GAtFH,WAAmC,IAAlChI,EAAiC,uDAAzBiI,EAAc3D,EAAW,uCAC5C,OAAQA,EAAOzD,MACb,KAAKlC,EAAIO,cACP,OAAO,gBACFoF,EAAOxD,SAEd,KAAKnC,EAAIQ,UAEP,OADAa,EAAMQ,YAAY0H,KAAK5D,EAAOxD,QAAQqH,UAC/B,gBACFnI,EADL,CACYK,QAAQ,gBACbL,EAAMK,QADM,gBACIiE,EAAOxD,QAAQqH,SAAW7D,EAAOxD,QAAQsH,cAGlE,KAAKzJ,EAAIS,SAEP,OADAY,EAAMK,QAAQiE,EAAOxD,QAAQuH,gBAAgB9H,SAAS2H,KAAK5D,EAAOxD,QAAQwH,QACnE,gBACFtI,EADL,CACYC,MAAM,gBACXD,EAAMC,MADI,gBACIqE,EAAOxD,QAAQwH,OAAShE,EAAOxD,QAAQyH,QAAQjE,EAAOxD,QAAQwH,YAGrF,KAAK3J,EAAIoB,UACP,OAAO,gBACFC,EADL,CACYC,MAAM,gBACXD,EAAMC,MADI,gBACIqE,EAAOxD,QAAQZ,GADnB,gBAERF,EAAMC,MAAMqE,EAAOxD,QAAQZ,IAFnB,CAEwBE,UAAWJ,EAAMC,MAAMqE,EAAOxD,QAAQZ,IAAIE,eAIrF,KAAKzB,EAAIU,SAEP,cADOW,EAAMC,MAAMqE,EAAOxD,QAAQZ,IAC3B,gBACFF,EADL,CACYK,QAAQ,gBACbL,EAAMK,QADM,gBAEdiE,EAAOxD,QAAQ0H,YAFD,gBAGVxI,EAAMK,QAAQiE,EAAOxD,QAAQ0H,aAHnB,CAGiCjI,SAAU+D,EAAOxD,QAAQ2H,oBAI/E,KAAK9J,EAAIW,UAEP,IADA,IAAMoJ,EAAmB1I,EAAMK,QAAQiE,EAAOxD,SAASP,SAC9CoI,EAAI,EAAGA,EAAID,EAAiBE,OAAQD,WACpC3I,EAAMC,MAAMyI,EAAiBC,IAItC,cAFO3I,EAAMK,QAAQiE,EAAOxD,SAC5Bd,EAAMQ,YAAYqI,OAAO7I,EAAMQ,YAAYsI,WAAU,SAAAC,GAAI,OAAIA,IAASzE,EAAOxD,WAAU,GAChF,gBACFd,GAEP,KAAKrB,EAAIY,YACP,OAAO,gBACFS,EADL,CACYQ,YAAa8D,EAAOxD,UAElC,KAAKnC,EAAIa,wBACP,OAAO,gBACFQ,EADL,CACYK,QAAQ,gBACbL,EAAMK,QADM,gBACIiE,EAAO0E,SADX,gBAEVhJ,EAAMK,QAAQiE,EAAO0E,UAFX,CAEsBzI,SAAU+D,EAAOxD,cAI5D,KAAKnC,EAAIc,gCACP,OAAO,gBACFO,EADL,CACYK,QAAQ,gBACbL,EAAMK,QADM,gBACIiE,EAAO2E,YADX,gBAEVjJ,EAAMK,QAAQiE,EAAO2E,aAFX,CAEyB1I,SAAU+D,EAAO4E,4BAI/D,KAAKvK,EAAIe,iCACP,OAAO,gBACFM,EADL,CACYK,QAAQ,gBACbL,EAAMK,QADM,gBAEdiE,EAAO6E,aAFO,gBAGVnJ,EAAMK,QAAQiE,EAAO6E,cAHX,CAG0B5I,SAAU+D,EAAO8E,6BAIhE,KAAMzK,EAAIgB,SACR,OAAO,gBACFsI,GAEP,QACE,OAAOjI,IC3EEqJ,GAX0B,SAACC,EAAU3H,GAAqB,IAAD,EAMlE2H,IAJFtB,EAFoE,EAEpEA,IAEEpH,EAJkE,EAGpEsB,aACEtB,MAGEgB,EAAe,GACrBA,EAAa5B,MAAQgI,EACjBpH,GAAOe,EAAgBf,EAAOgB,ICE7B,SAAS2H,GAASC,GACvB,OAAO,SAACnH,EAAUiH,GAChBjH,EATG,SAAwBmH,GAC7B,MAAO,CACL3I,KAAMlC,EAAIQ,UACV2B,QAAS0I,GAMAC,CAAeD,IACxBH,GAA0BC,EAAU3H,IAWjC,SAAS+H,GAAQnB,GACtB,OAAO,SAAClG,EAAUiH,GAChBjH,EATG,SAAuBkG,GAC5B,MAAO,CACL1H,KAAMlC,EAAIS,SACV0B,QAASyH,GAMAoB,CAAcpB,IACvBc,GAA0BC,EAAU3H,IAkBjC,SAASiI,GAASC,GACvB,OAAO,SAACxH,EAAUiH,GAChBjH,EATG,SAAwBwH,GAC7B,MAAO,CACLhJ,KAAMlC,EAAIoB,UACVe,QAAS+I,GAMAC,CAAeD,IACxBR,GAA0BC,EAAU3H,IAIjC,SAASoI,GAASF,GACvB,OAAO,SAACxH,EAAUiH,GAChBjH,EAvBG,SAAyBwH,GAC9B,MAAO,CACLhJ,KAAMlC,EAAIU,SACVyB,QAAS+I,GAoBAG,CAAgBH,IACzBR,GAA0BC,EAAU3H,IAWjC,SAASsI,GAAUC,GACxB,OAAO,SAAC7H,EAAUiH,GAChBjH,EATG,SAA0B6H,GAC/B,MAAO,CACLrJ,KAAMlC,EAAIW,UACVwB,QAASoJ,GAMAC,CAAiBD,IAC1Bb,GAA0BC,EAAU3H,I,mRC5DxC,IAAMgC,GAAaF,YAAOG,IAAPH,CAAH,MAWD,SAASsC,GAAK9H,GAAQ,IAGjCuK,EAWEvK,EAXFuK,YACA4B,EAUEnM,EAVFmM,MAEMlK,EAQJjC,EATFkC,KACED,GAGMC,EAKNlC,EANFkC,KACEA,KAGUC,EAEVnC,EAHFkC,KACEC,SAIEiC,EAAWyC,cACXzE,EAAU0E,aAAY,SAAA/E,GAAK,OAAIA,EAAMgI,IAAI3H,WACzC6B,EAAe6C,aAAY,SAAA/E,GAAK,OAAIA,EAAMkC,gBAE3B6C,aAAY,SAAA/E,GAAK,OAAIA,EAAMgI,OAG5C9F,EAAatB,OAAesB,EAAatB,MAE7C,IAAMyJ,EAAa,WACjB,IAAM5B,EAAa,YAAOpI,EAAQmI,GAAajI,UACzC+J,EAAY7B,EAAcG,OAChC,GAAI0B,EACF,IAAK,IAAI3B,EAAI,EAAGA,EAAI2B,EAAW3B,IACzBF,EAAcE,KAAOzI,GACvBuI,EAAcI,OAAOF,EAAG,GAI9BtG,EAAS0H,GAAS,CAAEvB,cAAaC,gBAAevI,SAG5CqK,EAAiB,WACrB,IAAM9B,EAAa,YAAOpI,EAAQmI,GAAajI,UACzC+J,EAAY7B,EAAcG,OAChC,GAAI0B,EACF,IAAK,IAAI3B,EAAI,EAAGA,EAAI2B,EAAW3B,IACzBF,EAAcE,KAAOzI,GACvBuI,EAAcI,OAAOF,EAAG,GAI9BtG,EAASuH,GAAS,CAAEpB,cAAaC,gBAAevI,SAGlD,OACE,kBAAC,IAAD,CACEsK,YAAatK,EACbkK,MAAOA,IAEN,SAACK,EAAUC,GAAX,OACC,kBAACC,EAAA,EAAD,iBACIF,EAASG,eADb,CAEAC,IAAKJ,EAASK,SACdC,WAAYL,EAASK,YACjBN,EAASO,iBAET,kBAACL,EAAA,EAAKtE,KAAN,KACE,kBAAC,GAAD,CACEf,QAAQ,OACRC,QAASgF,GAERnK,EAAW,YAAc,aAE5B,kBAAC,GAAD,CACEkF,QAAQ,SACRC,QAAS8E,GAFX,YAMA,kBAAC,KAAD,CACEY,SAAS,QACTC,YAAa9K,EACb+K,QAAS,EACTC,QAAS,EACTC,QAAQ,EACRC,aAAa,EACbC,IAAKpL,S,86BCzFrB,IAAMqL,GAAqB/H,IAAOC,IAAV,MAKlBG,GAAeJ,YAAOK,IAAMC,OAAbN,CAAH,MAIZE,GAAaF,YAAOG,IAAPH,CAAH,MAUVO,GAAcP,YAAOK,IAAPL,CAAH,MAML,SAAAxF,GAAK,OAAIA,EAAMwN,SAAW,MAUvB,SAASC,GAA4BzN,GAAQ,IAClDoK,EAAmBpK,EAAnBoK,eADiD,EAETjK,oBAAS,GAFA,mBAElDuN,EAFkD,KAEhCC,EAFgC,OAGTxN,oBAAS,GAHA,mBAGlDyN,EAHkD,KAGhCC,EAHgC,OAIjC1N,mBAAS,IAJwB,mBAIlD+B,EAJkD,KAI5C4L,EAJ4C,OAKnB3N,mBAAS,IALU,mBAKlDsG,EALkD,KAKrCC,EALqC,OAMfvG,mBAAS,IANM,mBAMlD4N,EANkD,KAMnCC,EANmC,KAQnDC,EAAWnH,aAAY,SAAA/E,GAAK,OAAIA,EAAMgI,IAAI/H,SAC1CoC,EAAWyC,cAqCjB,SAASqH,EAAcC,GACrBH,EAAiBG,EAAMC,SAGzB9N,qBAAU,WACO,YAAI+N,SAASC,iBAAiB,qBAC1CC,QAAO,SAAA/J,GAAC,OAAIA,EAAEgK,YAAYC,SAAS,eACnCC,SAAQ,SAAAlK,GAAC,OAAIA,EAAEmK,iBAAiB,QAAST,QAC3C,CAACH,IAMJ,OACE,oCACE,kBAACR,GAAD,KACE,kBAAC,GAAD,CACElG,QAAQ,UACRC,QAAS,WARfqG,GAAoB,KAMhB,YAMA,kBAAC,GAAD,CACEtG,QAAQ,SACRW,MAAO,CAAE4G,MAAO,QAChBtH,QAAS,kBAAMuG,GAAoB,KAHrC,eASF,kBAAC,GAAD,CACEgB,KAAMnB,EACNoB,OAAQ,kBAAMnB,GAAoB,IAClCH,SAAUO,EACVgB,WAAW,EACXC,cAAc,EACdC,cAAc,GAEd,kBAACpJ,EAAA,EAAM6B,OAAP,CAAcC,aAAW,GACvB,kBAAC9B,EAAA,EAAM+B,MAAP,uBACiB,6BADjB,uCAKF,kBAAC/B,EAAA,EAAMuC,KAAP,KACE,kBAACe,EAAA,EAAD,CAAYR,UAAU,QACpB,kBAACQ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBpH,GAAG,gBAApB,SAEF,kBAACqH,EAAA,EAAD,CACEE,mBAAiB,eACjBC,SAAU,SAAAC,GAAC,OAAIoE,EAAQpE,EAAEE,OAAOC,QAChCA,MAAO3H,MAIb,kBAAC,GAAD,KACE,yBAAK8F,MAAO,CAAEC,MAAO,QAClBxB,GAEH,6BACE,kBAACqD,EAAA,EAAD,CACEzC,QAAQ,YACRC,QAAS,kBAAMqG,GAAoB,IACnC3F,MAAO,CAAEkH,YAAa,QAHxB,SAOA,kBAACpF,EAAA,EAAD,CACEzC,QAAQ,SACRC,QAAS,kBAAMwG,EAAQ,KACvB9F,MAAO,CAAEkH,YAAa,QAHxB,SAOA,kBAACpF,EAAA,EAAD,CACEzC,QAAQ,UACRC,QA7GK,WACf,IAAK,IAAI6H,KAAOlB,EAAU,CAExB,GAD6BA,EAASkB,GAA9BjN,OACWA,EAEjB,YADAwE,EAAe,8CAKnB,IAAM2D,EAAS+E,OACT9E,EAAO,gBACVD,EAAS,CACRpI,GAAIoI,EACJnI,OACAC,UAAU,IAKKkN,KAAMnN,IAGvBkC,EAASqH,GAAQ,CAAEnB,UAASF,iBAAgBC,YAC5CyD,EAAQ,IACRH,GAAoB,IAEpBjH,EAAgB,yDAA8B,6BAA9B,kCAiFV,WASN,kBAACb,EAAA,EAAD,CAAOgJ,KAAMjB,EAAkBkB,OAAQ,kBAAMjB,GAAoB,KAC/D,kBAAChI,EAAA,EAAM6B,OAAP,CAAcC,aAAW,GACvB,kBAAC9B,EAAA,EAAM+B,MAAP,yBAEF,kBAAC/B,EAAA,EAAMuC,KAAP,mDAAuD,6BAAvD,mCACA,kBAACvC,EAAA,EAAMC,OAAP,KACE,kBAACgE,EAAA,EAAD,CAAQzC,QAAQ,YAAYC,QAAS,kBAAMuG,GAAoB,KAA/D,MAGA,kBAAC/D,EAAA,EAAD,CAAQzC,QAAQ,UAAUC,QAlIjB,WACflD,EAAS4H,GAAU5B,IACnByD,GAAoB,KAgId,a,6tBCvLV,IAAMyB,GAAa9J,YAAOkH,IAAPlH,CAAH,MAaV+J,GAAkB/J,YAAOkH,IAAK9E,MAAZpC,CAAH,MAWfgK,GAAWhK,IAAOC,IAAV,MAGQ,SAAAzF,GAAK,OAAIA,EAAMyP,eAAiB,UAAY,aAKnD,SAASC,GAAO1P,GAAQ,IAEnCgC,EASEhC,EATFgC,MACAmK,EAQEnM,EARFmM,MACAwD,EAOE3P,EAPF2P,eAEM1N,EAKJjC,EANF4P,OACE3N,GAGOI,EAEPrC,EAHF4P,OACEvN,MAIJ,OACE,kBAAC,IAAD,CACEkK,YAAatK,EACbkK,MAAOA,IAEN,SAAAK,GAAQ,OACP,kBAAC8C,GAAD,iBACM9C,EAASG,eADf,CAEEC,IAAKJ,EAASK,WAEd,kBAACH,EAAA,EAAKtE,KAAN,KACE,kBAACmH,GACK/C,EAASO,gBAEb,wBAAI/E,MAAO,CAAE6H,eAAgB,cAAgBxN,GAC7C,kBAACoL,GAAD,CACErD,eAAgBnI,KAGpB,kBAAC,IAAD,CACE6N,YAAa7N,EACb0N,eAAgBA,IAEf,SAACnD,EAAUC,GAAX,OACC,kBAAC+C,GAAD,eACE5C,IAAKJ,EAASK,UACVL,EAASuD,eAFf,CAGEN,eAAgBhD,EAASgD,iBAExBzN,EAAMgO,KAAI,SAACC,EAAUC,GAAX,OACT,kBAACpI,GAAD,CACEqH,IAAKc,EAAShO,GACdC,KAAM+N,EACN9D,MAAO+D,EACP3F,YAAatI,OAGhBuK,EAAS2D,qBC/ErB,SAASC,GAAWC,GACzB,OAAO,SAACjM,EAAUiH,GAChBjH,EATG,SAA0BiM,GAC/B,MAAO,CACLzN,KAAMlC,EAAIY,YACVuB,QAASwN,GAMAC,CAAiBD,IAC1BjF,GAA0BC,EAAU3H,IAYjC,SAAS6M,GAAqBtO,EAAIuO,GACvC,OAAO,SAACpM,EAAUiH,GAChBjH,EAVG,SAAoCnC,EAAIuO,GAC7C,MAAO,CACL5N,KAAMlC,EAAIa,wBACVwJ,SAAU9I,EACVY,QAAS2N,GAMAC,CAA2BxO,EAAIuO,IACxCpF,GAA0BC,EAAU3H,IAoBjC,SAASgN,GAA6BxF,EAAcC,GACzD,OAAO,SAAC/G,EAAUiH,GAChBjH,EAVG,SAA4C8G,EAAcC,GAC/D,MAAO,CACLvI,KAAMlC,EAAIe,iCACVyJ,eACAC,0BAMSwF,CAAmCzF,EAAcC,IAC1DC,GAA0BC,EAAU3H,I,syBCtCxC,IAAM6B,GAAiBC,IAAOC,IAAV,MAMdC,GAAaF,YAAOG,IAAPH,CAAH,MAUVO,GAAcP,YAAOK,IAAPL,CAAH,MAiBF,SAASoL,KAAsB,IAAD,EACnBzQ,oBAAS,GADU,mBACpC0O,EADoC,KAC9BgC,EAD8B,OAEP1Q,mBAAS,IAFF,mBAEpC2Q,EAFoC,KAExBC,EAFwB,KAKrC3M,GADe0C,aAAY,SAAA/E,GAAK,OAAIA,EAAMgI,OAC/BlD,eAEXmK,EAAc,kBAAMH,GAAQ,IAqBlC,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEzJ,MAAI,EACJC,QAAQ,QACRC,QA1BW,kBAAMuJ,GAAQ,IA2BzB7I,MAAO,CAAEkH,YAAa,QAJxB,qBAUF,kBAAC,GAAD,CAAaL,KAAMA,EAAMC,OAAQkC,GAC/B,kBAACnL,EAAA,EAAM6B,OAAP,CAAcC,aAAW,GACvB,kBAAC9B,EAAA,EAAM+B,MAAP,gDAEF,kBAAC/B,EAAA,EAAMuC,KAAP,KACE,kBAACe,EAAA,EAAD,CAAYR,UAAU,QACpB,kBAACQ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBpH,GAAG,gBAApB,UAEF,kBAACqH,EAAA,EAAD,CACEE,mBAAiB,eACjBC,SAAU,SAAAC,GAAC,OAAIqH,EAAcrH,EAAEE,OAAOC,QACtCA,MAAOiH,MAIb,kBAACjL,EAAA,EAAMC,OAAP,KACE,kBAACgE,EAAA,EAAD,CAAQzC,QAAQ,YAAYC,QAAS0J,GAArC,SAGA,kBAAClH,EAAA,EAAD,CAAQzC,QAAQ,UAAUC,QApDhB,WAChB,IAAM2J,EAAU7B,OACV7D,EAAQ,gBACX0F,EAAU,CACThP,GAAIgP,EACJ5O,MAAOyO,EACPxO,SAAU,KAGR4O,EAAWC,OAAOC,QAAQ7F,GAC1BrB,EAAWgH,EAAS,GAAG,GACvB/G,EAAY+G,EAAS,GAAG,GAE9B9M,EAASkH,GAAS,CAAEpB,WAAUC,eAC9B4G,EAAc,IACdF,GAAQ,KAqCF,mB,2FC7FV,IAAMvI,GAAY9C,IAAOC,IAAV,MAIA,SAAS4L,KAAY,IAAD,EACelR,qBADf,mBACRmR,GADQ,aAE0BnR,oBAAS,GAFnC,mBAI3BoR,GAJ2B,UAIpBzK,aAAY,SAAA/E,GAAK,OAAIA,EAAMgI,QAElC3F,EAAWyC,cAoDjB,OACE,kBAAC,IAAD,CACE2K,YAnDgB,SAACC,GACnB,IAAMzG,EAAcuG,EAAKhP,YAAYmP,QAAQD,EAAME,OAAO7B,aAC1DwB,EAAoBtG,IAkDlB4G,aAhDiB,SAACC,GACIA,EAAhBC,aAgDNC,UA7Cc,SAACC,GAEjBV,EAAoB,MAFQ,IAIrBQ,EAA0CE,EAA1CF,YAAaH,EAA6BK,EAA7BL,OAAQpF,EAAqByF,EAArBzF,YAAa3J,EAAQoP,EAARpP,KACzC,GAAKkP,IAIFA,EAAYhC,cAAgB6B,EAAO7B,aACpCgC,EAAY3F,QAAUwF,EAAOxF,OAD/B,CAMA,GAAY,WAATvJ,EAAmB,CACpB,IAAMyN,EAAiB4B,MAAMC,KAAKX,EAAKhP,aAIvC,OAHA8N,EAAezF,OAAO+G,EAAOxF,MAAO,GACpCkE,EAAezF,OAAOkH,EAAY3F,MAAO,EAAGI,QAC5CnI,EAASgM,GAAWC,IAItB,IAAMoB,EAAQF,EAAKnP,QAAQuP,EAAO7B,aAC5BqC,EAASZ,EAAKnP,QAAQ0P,EAAYhC,aACxC,GAAG2B,IAAUU,EAAO,CAClB,IAAMC,EAAcH,MAAMC,KAAKT,EAAMnP,UAIrC,OAHA8P,EAAYxH,OAAO+G,EAAOxF,MAAO,GACjCiG,EAAYxH,OAAOkH,EAAY3F,MAAO,EAAGI,QACzCnI,EAASmM,GAAqBkB,EAAMxP,GAAImQ,IAI1C,IAAMC,EAAgBJ,MAAMC,KAAKT,EAAMnP,UACvC+P,EAAczH,OAAO+G,EAAOxF,MAAO,GACnC,IFtCwCnB,EEsClCsH,EAAiBL,MAAMC,KAAKC,EAAO7P,UACzCgQ,EAAe1H,OAAOkH,EAAY3F,MAAO,EAAGI,GAC5CnI,GFxCwC4G,EEwCHyG,EAAMxP,GFvCtC,CACLW,KAAMlC,EAAIc,gCACVwJ,cACAC,sBEoC+CoH,KAC/CjO,EAASsM,GAA6ByB,EAAOlQ,GAAIqQ,OAS/C,kBAAC1B,GAAD,MACA,kBAAC,IAAD,CACEd,YAAY,cACZyC,UAAU,aACV3P,KAAK,WAEJ,SAAA4J,GAAQ,OACP,kBAAClE,GAAD,iBACIkE,EAASuD,eADb,CAEAnD,IAAKJ,EAASK,WAEX0E,EAAKhP,YAAYyN,KAAI,SAACjF,EAAUoB,GAC/B,IAAMyD,EAAS2B,EAAKnP,QAAQ2I,GACtB/I,EAAQ4N,EAAOtN,SAAS0N,KAAI,SAAA3F,GAAM,OAAIkH,EAAKvP,MAAMqI,MAEvD,OACE,kBAACqF,GAAD,CACEP,IAAKS,EAAO3N,GACZ2N,OAAQA,EACR5N,MAAOA,EACPmK,MAAOA,OAIZK,EAAS2D,iB,+BCtFPqC,GArBC,WAAyB,IAAxBzQ,EAAuB,uDAAf,GAAIsE,EAAW,uCACtC,OAAQA,EAAOzD,MACb,IAAK,aACH,OAAO,gBACFb,EADL,CAEE0Q,WAAYpM,EAAOxD,UAEvB,IAAK,uBACH,OAAO,gBACFd,EADL,CAEE2Q,gBAAiBrM,EAAOxD,UAE5B,IAAK,WACH,OAAO,gBACFd,EADL,CAEEG,KAAMmE,EAAOnE,OAEjB,QACE,OAAOH,IChBPiI,GAAe,CACnBrH,MAAO,GACPgQ,aAAa,EACb5L,cAAe,GACf6L,UAAW,GACX9N,QAAS,IAoEIb,GAjEM,WAAmC,IAAlClC,EAAiC,uDAAzBiI,GAAc3D,EAAW,uCACrD,OAAQA,EAAOzD,MACb,KAAMlC,EAAIC,mBACR,OAAO,gBACFoB,EADL,CAEEY,MAAO,YAEX,KAAMjC,EAAIE,qBACR,OAAO,gBACFmB,EADL,CAEEY,MAAM,GAAD,OAAK0D,EAAOxD,QAAQF,OACzBmC,QAASuB,EAAOxD,QAAQiC,UAG5B,KAAMpE,EAAIG,qBACR,OAAO,gBACFkB,EADL,CAEEgF,cAAeV,EAAOxD,UAG1B,KAAMnC,EAAII,oBACR,OAAO,gBACFiB,EADL,CAEEY,MAAO,YASX,KAAMjC,EAAIM,sBACR,OAAO,gBACFe,EADL,CAEE6Q,UAAWvM,EAAOxD,UAItB,KAAMnC,EAAIiB,gBACR,OAAO,gBACFI,EADL,CAEE4Q,aAAa,IAEjB,KAAMjS,EAAIkB,gBACR,OAAO,gBACFG,EADL,CAEE4Q,aAAa,IAEjB,KAAMjS,EAAIgB,SACR,OAAO,gBACFK,EADL,CAEEY,MAAO,IACJqH,IAEP,KAAMtJ,EAAImB,mBACR,OAAO,gBACFE,EADL,CAEEgF,cAAe,KAEnB,QACE,OAAOhF,IC5DE8Q,GAVU,WAA4B,IAA3B9Q,EAA0B,wDAAXsE,EAAW,uCAClD,OAAQA,EAAOzD,MACb,IAAK,gBACH,OAAO,gBACFb,EADL,GACesE,EAAOxD,SAExB,QACE,OAAOd,ICAP+Q,GAAcC,2BAAgB,CAAEhJ,OAAKyI,WAASvO,gBAAc4O,sBAGnDG,GAFDC,uBAAYH,GAAaI,+BAAoBC,2BAAgBC,QCD3EC,IAASC,OACP,kBAAC,IAAD,CACEC,aAAa,2CACbC,SAAS,MAET,kBAAC,IAAD,CAAUR,MAAOA,IACf,kBAACS,EAAA,EAAD,KACE,mBCPO,WAAgB,IAAD,EACMtT,oBAAS,GADf,mBACrBuT,EADqB,KACVzM,EADU,OAEQ9G,oBAAS,GAFjB,mBAErBwT,EAFqB,KAERC,EAFQ,OAGYzT,oBAAS,GAHrB,mBAItB0T,GAJsB,UAIF/M,aAAY,SAAA/E,GAAK,OAAIA,EAAMkC,aAAa0O,gBAE5DvO,EAAWyC,cANW,EAOVF,cAAX7B,EAPqB,oBAQpBgP,EAA6BhP,EAA7BgP,YAAaC,EAAgBjP,EAAhBiP,YAiBrB,OAfAzT,qBAAU,WACLwT,GAAeC,GAAeJ,IAI/BvP,EAASa,EAAc,CAAEC,QAHT4O,EAGkB3O,QAFlB4O,KAGhB9M,GAAa,GACb2M,GAAa,MAEd,IAOD,oCACE,kBAAC5N,EAAD,CACE6I,KAAM6E,GAAaG,EACnB/E,OARY,WAChB1K,EhB+IK,CACLxB,KAAMlC,EAAIkB,kBgB/IVqF,GAAa,IAOTA,aAAcA,IAKhB,kBAACoK,GAAD,SD5BE,SAINhD,SAAS2F,eAAe,U","file":"static/js/main.8915414c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  useGoogleReCaptcha,\n} from 'react-google-recaptcha-v3';\n\n// Remember that the hook can only be used within a React functional component\nfunction ReCaptchaComponent(props) {\n  const { executeRecaptcha } = useGoogleReCaptcha();\n  const [isRobot, setRobotStatus] = useState('')\n\n  useEffect(() => {\n    executeRecaptcha().then(res => setRobotStatus(res))\n  }, [])\n\n  return (\n    <>\n      {isRobot && props.children}\n    </>\n  )\n}\n\nexport default ReCaptchaComponent\n","const CON = {\n  REGISTRATION_START: 'REGISTRATION_START',\n  REGISTRATION_SUCCESS: 'REGISTRATION_SUCCESS',\n  REGISTRATION_FAILURE: 'REGISTRATION_FAILURE',\n  AUTHORIZATION_START: 'AUTHORIZATION_START',\n  AUTHORIZATION_SUCCESS: 'AUTHORIZATION_SUCCESS',\n  AUTHORIZATION_FAILURE: 'AUTHORIZATION_FAILURE',\n  SET_USER_DATA: 'SET_USER_DATA',\n  ADD_BLOCK: 'ADD_BLOCK',\n  ADD_LINK: 'ADD_LINK',\n  DEL_LINK: 'DEL_LINK',\n  DEL_BLOCK: 'DEL_BLOCK',\n  MOVE_COLUMN: 'MOVE_COLUMN',\n  MOVE_LINK_INSIDE_COLUMN: 'MOVE_LINK_INSIDE_COLUMN',\n  START_MOVE_LINK_BETWEEN_COLUMNS: 'START_MOVE_LINK_BETWEEN_COLUMNS',\n  FINISH_MOVE_LINK_BETWEEN_COLUMNS: 'FINISH_MOVE_LINK_BETWEEN_COLUMNS',\n  SIGN_OUT: 'SIGN_OUT',\n  SIGN_MODAL_SHOW: 'SIGN_MODAL_SHOW',\n  SIGN_MODAL_HIDE: 'SIGN_MODAL_HIDE',\n  TRIM_ERROR_MESSAGE: 'TRIM_ERROR_MESSAGE',\n  HIDE_PICS: 'HIDE_PICS', \n}\n\nexport default CON\n","export const state = {\n  links: {\n    'link-1': { id: 'link-1', link: 'https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background/', showPics: true },\n    'link-2': { id: 'link-2', link: 'https://soundcloud.com/ritmomusic/ritmo-some-kind-of-rhythm-001', showPics: true },\n    'link-3': { id: 'link-3', link: 'https://stackoverflow.com/questions/8825144/detect-double-tap-on-ipad-or-iphone-screen-using-javascript/', showPics: true },\n    'link-4': { id: 'link-4', link: 'https://www.robinwieruch.de/react-hooks-fetch-data/', showPics: true },\n    'link-5': { id: 'link-5', link: 'https://habr.com/ru/post/326986/', showPics: true },\n    'link-6': { id: 'link-6', link: 'https://www.npmjs.com/package/react-native-link-preview/', showPics: true },\n    'link-7': { id: 'link-7', link: 'https://habr.com/ru/company/ruvds/blog/423483/', showPics: true },\n    'link-8': { id: 'link-8', link: 'https://medium.com/@misterdev/how-to-write-a-webpack-scaffold-ace202775572/', showPics: true },\n  },\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'Mailing link',\n      linksIds: ['link-1', 'link-2', 'link-3', 'link-4'],\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'About JavaScript',\n      linksIds: ['link-5', 'link-6'],\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'some libs',\n      linksIds: ['link-7', 'link-8'],\n    },\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3'],\n}\n","\nconst backHost = 'back.mylinkbox.ru'\nexport default backHost\n","import qs from 'qs'\nimport CON from '../constants'\nimport { state } from '../../data/initialState'\nimport backHost from '../../config'\n\nconst initialStateSave = {}\ninitialStateSave.state = state\n\nfunction registrationStart() {\n  return {\n    type: CON.REGISTRATION_START,\n  }\n}\n\nfunction authirizationStart() {\n  return {\n    type: CON.AUTHORIZATION_START,\n  }\n}\n\nfunction authirizationFalue(error) {\n  return {\n    type: CON.AUTHORIZATION_FAILURE,\n    payload: error,\n  }\n}\n\nfunction registrationSuccess(token) {\n  return {\n    type: CON.REGISTRATION_SUCCESS,\n    payload: token,\n  }\n}\n\nfunction setUserState(s) {\n  return {\n    type: 'SET_USER_DATA',\n    payload: s,\n  }\n}\n\nexport function registrationOrAuthFailure(err) {\n  return {\n    type: CON.REGISTRATION_FAILURE,\n    payload: { err },\n  }\n}\n\nexport const saveInintalUserState = token => fetch(`https://${backHost}/mylinks`, {\n  method: 'POST',\n  headers: {\n    Authorization: `JWT ${token}`,\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(initialStateSave),\n}).then(res => console.log(res))\n\nexport const saveUserChanges = (token, newUserState) => {\n  fetch(`https://${backHost}/mylinks`, {\n    method: 'POST',\n    headers: {\n      Authorization: `JWT ${token}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newUserState),\n  }).then(res => console.log(res))\n}\n\nconst getUserToken = paramsToGetToken => fetch(`https://${backHost}/sign_in`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  },\n  body: qs.stringify(paramsToGetToken),\n}).then(res => res.json())\n\nconst getUserData = token => fetch(`https://${backHost}/mylinks`, {\n  method: 'GET',\n  headers: {\n    Authorization: `JWT ${token}`,\n  },\n}).then(res => res.json())\n\nexport function registration({ regName, regPass }) {\n  return (dispatch) => {\n    dispatch(registrationStart())\n\n    const requestBody = {\n      name: regName,\n      password: regPass,\n    }\n\n    const userRegistration = () => fetch(`https://us-central1-mylinkbox-gedrimas.cloudfunctions.net/app/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: qs.stringify(requestBody),\n    }).then(res => res.json())\n      \n    const registerAndGetToken = async () => {\n      try {\n\n        const response = await userRegistration()\n        const { name } = response\n\n        if(response.message && response.message.code === 11000) {\n          throw new Error('This name is already exist')\n        }\n\n        const pass = regPass\n        const paramsToGetToken = {\n          name,\n          password: regPass,\n        }\n        \n        const { token } = await getUserToken(paramsToGetToken)\n        dispatch(registrationSuccess({ token, cookies: {name, pass} }))\n        setTimeout(() => {\n          saveInintalUserState(token)\n        }, 2000);\n      }\n      catch(error) {\n        dispatch(registrationOrAuthFailure(error.message))\n      }\n      \n    }\n    registerAndGetToken()\n  }\n}\n\nexport function authorization({ logName, logPass }) {\n  return (dispatch) => {\n\n    dispatch(authirizationStart())\n\n    const pass = logPass\n    const name = logName\n    const paramsToGetToken = {\n      name: logName,\n      password: logPass,\n    }\n\n    const authAndGetUserData = async () => {\n      try {\n        const response = await getUserToken(paramsToGetToken)\n        if (response.message) throw new Error(response.message)\n        const { token } = response\n        const { state: userState } = await getUserData(token)\n        dispatch(registrationSuccess({ token, cookies: {name, pass} }))\n        dispatch(setUserState(userState))\n      } catch(error) {\n        dispatch(registrationOrAuthFailure(error.message))\n      }\n    }\n\n    authAndGetUserData()\n  }\n}\n\nexport function signOut() {\n  return {\n    type: CON.SIGN_OUT,\n  } \n}\n\nexport function showSignModal() {\n  return {\n    type: CON.SIGN_MODAL_SHOW,\n  }\n}\n\nexport function hideSignModal() {\n  return {\n    type: CON.SIGN_MODAL_HIDE,\n  }\n}\n\nexport function trimErrorMessage() {\n  return {\n    type: CON.TRIM_ERROR_MESSAGE,\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useCookies } from 'react-cookie'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Button,\n  Tab,\n  Row,\n  Col,\n  Nav,\n  InputGroup,\n  FormControl,\n  Badge,\n} from 'react-bootstrap'\nimport ReCaptchaComponent from '../ReCaptchaComponent'\nimport { registration, authorization, signOut, showSignModal, hideSignModal, trimErrorMessage } from '../../store/actions/authRegActions'\n\nconst StyledBadgeDiv = styled.div`\n  position: fixed;\n  margin: 5px 0px 0px 125px;\n  z-index: 999;\n`\nconst StyledBage = styled(Badge)`\n  margin-bottom: 5px;\n  :hover {\n    cursor: pointer;\n    outline: 1px solid #03F6FA;\n    outline-offset: 2px;\n    box-shadow: 0 0 0 3px #010DFD;\n    border-radius: 0;\n  }\n`\nconst StyledFooter = styled(Modal.Footer)`\n  dispaly: flex;\n  justify-content: space-between;\n`\n\n\nconst StyledModal = styled(Modal)`\n  @media only screen and (max-width: 600px) {\n    width: 90vw;\n    position: fixed;\n    top: 25vw\n    left: 5vw;\n    height: 50% !important;\n  }\n  @media only screen (max-width: 800px){\n    width: 50vw;\n    position: fixed;\n    top: 25vw\n    left: 25vw;\n    height: 50% !important;\n  }\n`\n\nexport default function AuthLogModal(props) {\n  const [regName, setRegName] = useState('')\n  const [regPass, setRegPass] = useState('')\n  const [logName, setLogName] = useState('')\n  const [logPass, setLogPass] = useState('')\n  const [action, setAction] = useState('first')\n  const [logButtonText, setLogButtonText] = useState('Sign in')\n  const [isFetchData, setFetchData] = useState(true)\n  const [wornMessage, setWornMessage] = useState('')\n  \n  const [cookies, setCookies] = useCookies(['linkBoxName', 'linkBoxPass'])\n\n  const dispatch = useDispatch()\n\n  const token = useSelector(state => state.registration.token)\n  const registerError = useSelector(state => state.registration.registerError)\n  const userCookies = useSelector(state => state.registration.cookies)\n\n\n  const state = useSelector(state => state)\n\n  const signInOrOutAndDellCookies = () => {\n    if (logButtonText === 'Sign in'){\n      dispatch(showSignModal())\n    }else{\n      dispatch(signOut())\n      setCookies('linkBoxName', '')\n      setCookies('linkBoxPass', '')\n    }\n  }\n\n  useEffect(() => {\n    if (token) {\n      setLogButtonText('Sign out')\n    } else {\n      setLogButtonText('Sign in')\n    }\n  })\n\n  useEffect(() => {\n    if (token !== 'pending' && token && !registerError) {\n      setCookies('linkBoxName', userCookies.name)\n      setCookies('linkBoxPass', userCookies.pass)\n      props.setModalShow(false)\n    }else {\n      setCookies('linkBoxName', '')\n      setCookies('linkBoxPass', '')\n    }\n  }, [token])\n\n  useEffect(() => {\n    if(registerError) setWornMessage(registerError.err)\n  })\n\n  useEffect(() => {\n    let screenObj = window.screen\n  })\n\n  const handleRegOrAuthButton = () => {\n    if (action === 'first') {\n      if (!regName || !regPass) {\n        setWornMessage('Fields should not be empty')\n        return\n      }\n      dispatch(registration({ regName, regPass }))\n    } else if (action === 'second') {\n      if (!logName || !logPass) {\n        setWornMessage('Fields should not be empty')\n        return\n      }\n      dispatch(authorization({ logName, logPass }))\n    }\n    setLogName('')\n    setLogPass('')\n    setRegName('')\n    setRegPass('')\n    setWornMessage('')\n    dispatch(trimErrorMessage(''))\n\n  }\n\n  const setNameForRegistration = (e) => {\n    if (wornMessage) {\n      setWornMessage('')\n      dispatch(trimErrorMessage())\n    }\n    setRegName(e)\n  }\n\n  return (\n    <>\n      <StyledBadgeDiv>\n        <StyledBage\n          pill\n          variant=\"dark\"\n          onClick={signInOrOutAndDellCookies}\n          >\n          {logButtonText}\n        </StyledBage>\n      </StyledBadgeDiv>\n      <ReCaptchaComponent>\n        <StyledModal\n          {...props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Welcome to LinkBox!\n              <Nav.Link \n                href=\"https://www.youtube.com/watch?v=UIZIwzr1ocA&feature=youtu.be\"\n                style={{\n                  color: 'red', \n                  padding: '0',\n                  fontSize: '12px',\n                }}\n              >\n                See how to use\n              </Nav.Link>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n              <Row>\n                <Col sm={3}>\n                  <Nav variant=\"pills\" className=\"flex-column\">\n                    <Nav.Item>\n                      <Nav.Link\n                        eventKey=\"first\"\n                        onSelect={(selected) => { \n                          setAction(selected) \n                          setWornMessage('')\n                          dispatch(trimErrorMessage(''))\n                        }}\n                      >\n                          Registr your new LinkBox\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                      <Nav.Link\n                        eventKey=\"second\"\n                        onSelect={(selected) => { \n                          setAction(selected) \n                          setWornMessage('')\n                          dispatch(trimErrorMessage(''))                       \n                        }}\n                        style={{ marginBottom: '17px' }}\n                      >\n                          Enter to your LinkBox\n                      </Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                </Col>\n                <Col sm={9}>\n                  <Tab.Content>\n                    <Tab.Pane eventKey=\"first\">\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Text id=\"inputGroup-sizing-default\">set your login</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                          aria-label=\"Default\"\n                          aria-describedby=\"inputGroup-sizing-default\"\n                          onChange={e => setNameForRegistration(e.target.value)}\n                          value={regName}\n                        />\n                      </InputGroup>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Text id=\"inputGroup-sizing-default\">set password</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                          type=\"password\"\n                          aria-label=\"Default\"\n                          aria-describedby=\"inputGroup-sizing-default\"\n                          onChange={e => setRegPass(e.target.value)}\n                          value={regPass}\n                        />\n                      </InputGroup>\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"second\">\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Text id=\"inputGroup-sizing-default\">\n                            Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                          aria-label=\"Default\"\n                          aria-describedby=\"inputGroup-sizing-default\"\n                          onChange={e => setLogName(e.target.value)}\n                          value={logName}\n                        />\n                      </InputGroup>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Text id=\"inputGroup-sizing-default\">Password</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                          type=\"password\"\n                          aria-label=\"Default\"\n                          aria-describedby=\"inputGroup-sizing-default\"\n                          onChange={e => setLogPass(e.target.value)}\n                          value={logPass}\n                        />\n                      </InputGroup>\n                    </Tab.Pane>\n                  </Tab.Content>\n                </Col>\n              </Row>\n            </Tab.Container>\n          </Modal.Body>\n          <StyledFooter>\n            <div style={{ color: 'red' }}>\n              {wornMessage}\n            </div>\n              <Button\n                onClick={handleRegOrAuthButton}\n              >\n                {action === 'first' ? 'Registr' : 'Sign in'}\n              </Button>\n          </StyledFooter>\n        </StyledModal>\n      </ReCaptchaComponent>\n    </>\n  )\n}\n","\nimport CON from '../constants'\nimport { state as initialState } from '../../data/initialState'\n\nconst dnd = (state = initialState, action) => {\n  switch (action.type) {\n    case CON.SET_USER_DATA:\n      return {\n        ...action.payload,\n      } \n    case CON.ADD_BLOCK:\n      state.columnOrder.push(action.payload.blockKey)\n      return {\n        ...state, columns: {\n          ...state.columns, [action.payload.blockKey]: action.payload.blockBody,\n        },\n      }\n    case CON.ADD_LINK:\n      state.columns[action.payload.parentColumnId].linksIds.push(action.payload.linkId)\n      return {\n        ...state, links: {\n          ...state.links, [action.payload.linkId]: action.payload.newLink[action.payload.linkId],\n        },\n      }\n    case CON.HIDE_PICS:\n      return {\n        ...state, links: {\n          ...state.links, [action.payload.id]: {\n            ...state.links[action.payload.id], showPics: !state.links[action.payload.id].showPics,\n          }\n        },\n      }\n    case CON.DEL_LINK:\n      delete state.links[action.payload.id]\n      return {\n        ...state, columns: {\n          ...state.columns,\n          [action.payload.parentBlock]: {\n            ...state.columns[action.payload.parentBlock], linksIds: action.payload.arrOfLinksIds,\n          },\n        },\n      }\n    case CON.DEL_BLOCK:\n      const linksToBeDeleted = state.columns[action.payload].linksIds\n      for (let i = 0; i < linksToBeDeleted.length; i++) {\n        delete state.links[linksToBeDeleted[i]]\n      }\n      delete state.columns[action.payload]\n      state.columnOrder.splice(state.columnOrder.findIndex(item => item === action.payload), 1)\n      return {\n        ...state,\n      }  \n    case CON.MOVE_COLUMN:\n      return {\n        ...state, columnOrder: action.payload,\n      }\n    case CON.MOVE_LINK_INSIDE_COLUMN:\n      return {\n        ...state, columns: {\n          ...state.columns, [action.columnId]: {\n            ...state.columns[action.columnId], linksIds: action.payload\n          }\n        }\n      }\n    case CON.START_MOVE_LINK_BETWEEN_COLUMNS:\n      return {\n        ...state, columns: {\n          ...state.columns, [action.startColumn]: {\n            ...state.columns[action.startColumn], linksIds: action.startColumnLinksOrder \n          } \n        }\n      }\n    case CON.FINISH_MOVE_LINK_BETWEEN_COLUMNS:\n      return {\n        ...state, columns: {\n          ...state.columns,\n          [action.finishColumn]: {\n            ...state.columns[action.finishColumn], linksIds: action.finishColumnLinksOrder\n          },\n        },\n      }\n    case (CON.SIGN_OUT):\n      return {\n        ...initialState\n      }\n    default:\n      return state\n  }\n}\n\nexport default dnd\n","export const getActualStateAndSaveToDb = (getState, saveUserChanges) => {\n  const {\n    dnd,\n    registration: {\n      token,\n    },\n  } = getState()\n  const newUserState = {}\n  newUserState.state = dnd\n  if (token) saveUserChanges(token, newUserState)\n}\nexport default getActualStateAndSaveToDb\n","import CON from '../constants'\nimport { saveUserChanges } from './authRegActions'\nimport getActualStateAndSaveToDb from './accessory'\n\nexport function addBlockAction(newBlock) {\n  return {\n    type: CON.ADD_BLOCK,\n    payload: newBlock,\n  }\n}\n\nexport function addBlock(newBlock) {\n  return (dispatch, getState) => {\n    dispatch(addBlockAction(newBlock))\n    getActualStateAndSaveToDb(getState, saveUserChanges)\n  }\n}\n\nexport function addLinkAction(newLink) {\n  return {\n    type: CON.ADD_LINK,\n    payload: newLink,\n  }\n}\n\nexport function addLink(newLink) {\n  return (dispatch, getState) => {\n    dispatch(addLinkAction(newLink))\n    getActualStateAndSaveToDb(getState, saveUserChanges)\n  }\n}\n\nexport function deletLinkAction(linkParams) {\n  return {\n    type: CON.DEL_LINK,\n    payload: linkParams,\n  }\n}\n\nexport function hidePicsAction(linkParams) {\n  return {\n    type: CON.HIDE_PICS,\n    payload: linkParams,\n  }\n}\n\nexport function hidePics(linkParams) {\n  return (dispatch, getState) => {\n    dispatch(hidePicsAction(linkParams))\n    getActualStateAndSaveToDb(getState, saveUserChanges)\n  }\n}\n\nexport function dellLink(linkParams) {\n  return (dispatch, getState) => {\n    dispatch(deletLinkAction(linkParams))\n    getActualStateAndSaveToDb(getState, saveUserChanges)\n  }\n}\n\nexport function deletBlockAction(blockParams) {\n  return {\n    type: CON.DEL_BLOCK,\n    payload: blockParams,\n  }\n}\n\nexport function dellBlock(blockParams) {\n  return (dispatch, getState) => {\n    dispatch(deletBlockAction(blockParams))\n    getActualStateAndSaveToDb(getState, saveUserChanges)\n  }\n}\n\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { Card, Badge } from 'react-bootstrap'\nimport ReactTinyLink from 'react-tiny-link'\nimport { useDispatch, useSelector } from 'react-redux' \nimport dnd from '../store/reducers/dndReducer';\nimport { dellLink, hidePics } from '../store/actions/contentActions'\nimport { saveUserChanges } from '../store/actions/authRegActions'\n\nconst StyledBage = styled(Badge)`\n  margin-bottom: 5px;\n  margin-right: 5px;\n  :hover {\n    cursor: pointer;\n    outline: 1px solid #03F6FA;\n    outline-offset: 3px;\n    box-shadow: 0 0 0 3px #010DFD;\n    border-radius: 0;\n  }\n`\nexport default function Link(props) {\n\n  const {\n    parentBlock,\n    index,\n    link: {\n      id: id,\n    },\n    link: {\n      link: link,\n    },\n    link: {\n      showPics: showPics,\n    }\n  } = props\n\n  const dispatch = useDispatch()\n  const columns = useSelector(state => state.dnd.columns)\n  const registration = useSelector(state => state.registration)\n  const newUserState = {}\n  newUserState.state = useSelector(state => state.dnd)\n\n  let token = ''\n  if (registration.token) token = registration.token\n  \n  const deleteLink = () => {\n    const arrOfLinksIds = [...columns[parentBlock].linksIds]\n    const isNoEmpty = arrOfLinksIds.length\n    if (isNoEmpty) {\n      for (let i = 0; i < isNoEmpty; i++) {\n        if (arrOfLinksIds[i] === id) {\n          arrOfLinksIds.splice(i, 1)\n        }\n      }\n    }\n    dispatch(dellLink({ parentBlock, arrOfLinksIds, id }))\n  }\n\n  const hideOrShoePics = () => {\n    const arrOfLinksIds = [...columns[parentBlock].linksIds]\n    const isNoEmpty = arrOfLinksIds.length\n    if (isNoEmpty) {\n      for (let i = 0; i < isNoEmpty; i++) {\n        if (arrOfLinksIds[i] === id) {\n          arrOfLinksIds.splice(i, 1)\n        }\n      }\n    }\n    dispatch(hidePics({ parentBlock, arrOfLinksIds, id }))\n  }\n\n  return (\n    <Draggable\n      draggableId={id}\n      index={index}\n    >\n      {(provided, snapshot) => (\n        <Card\n        {...provided.draggableProps}\n        ref={provided.innerRef}\n        isDragging={snapshot.isDragging}\n        {...provided.dragHandleProps}\n        >\n            <Card.Body>\n              <StyledBage \n                variant=\"info\"\n                onClick={hideOrShoePics}\n              >\n                {showPics ? \"Hide pics\" : \"Show pics\"}\n              </StyledBage>\n              <StyledBage \n                variant=\"danger\"\n                onClick={deleteLink}\n              >\n                Del link\n              </StyledBage>\n              <ReactTinyLink\n                cardSize=\"large\"\n                showGraphic={showPics}\n                maxLine={5}\n                minLine={5}        \n                header={false}\n                description={false}\n                url={link}\n              />\n            </Card.Body>\n        </Card>\n      )}\n    </Draggable>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport uniqid from 'uniqid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Modal,\n  Button,\n  Badge,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap'\nimport styled from 'styled-components'\nimport isUrl from 'is-valid-http-url'\n\nimport { addLink, dellBlock } from '../../store/actions/contentActions'\n\nconst ColumnControlBlock = styled.div`\n  display: flex;\n  align-self: flex-start;\n  margin-left: -3px;\n`\nconst StyledFooter = styled(Modal.Footer)`\n  dispaly: flex;\n  justify-content: space-between;\n`\nconst StyledBage = styled(Badge)`\n  margin-right: 5px;\n  :hover {\n    cursor: pointer;\n    outline: 1px solid #03F6FA;\n    outline-offset: 3px;\n    box-shadow: 0 0 0 3px #010DFD;\n    border-radius: 0;\n  }\n`\nconst StyledModal = styled(Modal)`\n    @media only screen and (max-width: 600px) {\n    width: 90vw;\n    position: fixed;\n    top: 25vw;\n    height: 50% !important;\n    left: ${props => props.clickPos - 50}px;\n  }\n  @media only screen (max-width: 800px){\n    width: 50vw;\n    position: fixed;\n    top: 25vw\n    left: 25vw;\n    height: 50% !important;\n  }\n  `\nexport default function AddNewLinAndDelBlockkModals(props) {\n  const { parentColumnId } = props\n  const [showAddLinkModal, setShowAddLinkModal] = useState(false)\n  const [showWornDelModal, setShowWornDelModal] = useState(false)\n  const [link, setLink] = useState('')\n  const [wornMessage, setWornMessage] = useState('')\n  const [clickPosition, setClickPosition] = useState('')\n\n  const allLinks = useSelector(state => state.dnd.links)\n  const dispatch = useDispatch()\n\n  const delBlock = () => {\n    dispatch(dellBlock(parentColumnId))\n    setShowWornDelModal(false)\n  }\n\n  const saveLink = () => {\n    for (let key in allLinks) {\n      const { link: oneOfLinks } = allLinks[key]\n      if (oneOfLinks === link) {\n        setWornMessage('This link is already exist in your linkbox')\n        return\n      }\n    }\n\n    const linkId = uniqid()\n    const newLink = {\n      [linkId]: {\n        id: linkId,\n        link,\n        showPics: true,\n      },\n    }\n\n\n    const isValidUrl = isUrl(link)\n\n    if (isValidUrl) {\n      dispatch(addLink({ newLink, parentColumnId, linkId }))\n      setLink('')\n      setShowAddLinkModal(false)\n    } else {\n      setWornMessage((<span>This link is not valid. <br /> Please, enter correct URL.</span>))\n    }\n  }\n  \n  function printMousePos(event) {\n    setClickPosition(event.clientX)\n  }\n  \n  useEffect(() => {\n    const result = [...document.querySelectorAll('div div div span')]\n      .filter(a => a.textContent.includes('Add link'))\n      .forEach(a => a.addEventListener('click', printMousePos))\n  }, [clickPosition])\n\n  const openAddLinkModal = () => {\n    setShowAddLinkModal(true)\n  }\n\n  return (\n    <>\n      <ColumnControlBlock>\n        <StyledBage\n          variant=\"success\"\n          onClick={() => openAddLinkModal(true)}\n        >\n          Add link\n        </StyledBage>\n        <StyledBage\n          variant=\"danger\"\n          style={{ width: '100%' }}\n          onClick={() => setShowWornDelModal(true)}\n        >\n          Del column\n        </StyledBage>\n      </ColumnControlBlock>\n\n      <StyledModal\n        show={showAddLinkModal}\n        onHide={() => setShowAddLinkModal(false)}\n        clickPos={clickPosition}\n        autoFocus={false}\n        restoreFocus={false}\n        enforceFocus={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Adding new link<br/>\n            (for example: https://github.com/)\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon1\">Link</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              aria-describedby=\"basic-addon1\"\n              onChange={e => setLink(e.target.value)}\n              value={link}\n            />\n          </InputGroup>\n        </Modal.Body>\n        <StyledFooter>\n          <div style={{ color: 'red' }}>\n            {wornMessage}\n          </div>\n          <div>\n            <Button\n              variant=\"secondary\"\n              onClick={() => setShowAddLinkModal(false)}\n              style={{ marginRight: '5px' }}\n            >\n              Close\n            </Button>\n            <Button\n              variant=\"danger\"\n              onClick={() => setLink('')}\n              style={{ marginRight: '5px' }}\n            >\n              Clear\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={saveLink}\n            >\n              Save\n            </Button>\n          </div>\n        </StyledFooter>\n      </StyledModal>\n      <Modal show={showWornDelModal} onHide={() => setShowWornDelModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Deleting column</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Do you really want to delete entire column <br /> with all link contained in it?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowWornDelModal(false)}>\n            No\n          </Button>\n          <Button variant=\"primary\" onClick={delBlock}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","\nimport React from 'react'\nimport { Card, Badge } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\nimport Link from './Link'\nimport AddNewLinAndDelBlockkModals from './modals/AddNewLinAndDelBlockkModals'\n\nconst StyledCard = styled(Card)`\n  margin: 8px;\n  background-color: white;\n  width: 30vw;\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n  background-color: #FFF267;\n  @media (max-width: 414px) {\n    width: 100vw;\n  }\n`\n\nconst StyledCardTitle = styled(Card.Title)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin: 8px;\n  margin-bottom: 0;\n  color: #0c92eb;\n  font-weight: 800;\n`\n\nconst TaskList = styled.div`\n  padding: 4px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => props.isDraggingOver ? 'skyblue' : 'inherit'}\n  flex-grow: 1;\n  min-height: 100px;\n`\n\nexport default function Column(props) {\n  const {\n    links,\n    index,\n    isDropDisabled,\n    column: {\n      id: id\n    },\n    column: {\n      title: title\n    },\n  } = props\n\n  return (\n    <Draggable\n      draggableId={id}\n      index={index}\n    >\n      {provided => (\n        <StyledCard\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <Card.Body>\n            <StyledCardTitle\n              {...provided.dragHandleProps}\n            >\n              <h2 style={{ textDecoration: 'underline' }}>{title}</h2>\n              <AddNewLinAndDelBlockkModals\n                parentColumnId={id}\n              />\n            </StyledCardTitle>\n            <Droppable\n              droppableId={id}\n              isDropDisabled={isDropDisabled}\n            >\n              {(provided, snapshot) => (\n                <TaskList\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  isDraggingOver={snapshot.isDraggingOver}\n                >\n                  {links.map((linkItem, indexItem) =>\n                    <Link \n                      key={linkItem.id}\n                      link={linkItem}\n                      index={indexItem}\n                      parentBlock={id}\n                    />\n                  )}\n                  {provided.placeholder}\n                </TaskList>\n              )\n              }\n            </Droppable>\n          </Card.Body>\n        </StyledCard>\n      )}\n    </Draggable>\n  )\n}","import CON from '../constants'\nimport { saveUserChanges } from './authRegActions'\nimport getActualStateAndSaveToDb from './accessory'\n\nexport function moveColumnAction(newColumnOrder) {\n  return {\n    type: CON.MOVE_COLUMN,\n    payload: newColumnOrder,\n  }\n}\n\nexport function moveColumn(newColumnOrder) {\n  return (dispatch, getState) => {\n    dispatch(moveColumnAction(newColumnOrder))\n    getActualStateAndSaveToDb(getState, saveUserChanges)\n  }\n}\n\nexport function moveLinkInsideColumnAction(id, newLinkOrder) {\n  return {\n    type: CON.MOVE_LINK_INSIDE_COLUMN,\n    columnId: id,\n    payload: newLinkOrder,\n  }\n}\n\nexport function moveLinkInsideColumn(id, newLinkOrder) {\n  return (dispatch, getState) => {\n    dispatch(moveLinkInsideColumnAction(id, newLinkOrder))\n    getActualStateAndSaveToDb(getState, saveUserChanges)\n  }\n}\n\nexport function startMoveLinkBetweenColumns(startColumn, startColumnLinksOrder) {\n  return {\n    type: CON.START_MOVE_LINK_BETWEEN_COLUMNS,\n    startColumn,\n    startColumnLinksOrder,\n  }\n}\n\nexport function finishMoveLinkBetweenColumnsAction(finishColumn, finishColumnLinksOrder) {\n  return {\n    type: CON.FINISH_MOVE_LINK_BETWEEN_COLUMNS,\n    finishColumn,\n    finishColumnLinksOrder,\n  }\n}\n\nexport function finishMoveLinkBetweenColumns(finishColumn, finishColumnLinksOrder) {\n  return (dispatch, getState) => {\n    dispatch(finishMoveLinkBetweenColumnsAction(finishColumn, finishColumnLinksOrder))\n    getActualStateAndSaveToDb(getState, saveUserChanges)\n  }\n}\n","import React, { useState } from 'react'\nimport uniqid from 'uniqid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Modal,\n  Button,\n  Badge,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap'\nimport styled from 'styled-components'\n\nimport { addBlock } from '../../store/actions/contentActions'\n\nconst StyledBadgeDiv = styled.div`\n  position: fixed;\n  margin: 5px 0px 0px 5px;\n  z-index: 999;\n  -webkit-backface-visibility: hidden;\n`\nconst StyledBage = styled(Badge)`\n  margin-bottom: 5px;\n  :hover {\n    cursor: pointer;\n    outline: 1px solid #03F6FA;\n    outline-offset: 2px;\n    box-shadow: 0 0 0 2px #010DFD;\n    border-radius: 0;\n  }\n`\nconst StyledModal = styled(Modal)`\n  @media only screen and (max-width: 600px) {\n    width: 90vw;\n    position: fixed;\n    top: 25vw\n    left: 5vw;\n    height: 50% !important;\n  }\n  @media only screen (max-width: 800px){\n    width: 50vw;\n    position: fixed;\n    top: 25vw\n    left: 25vw;\n    height: 50% !important;\n  }\n\n`\nexport default function SetBlockTitleModal() {\n  const [show, setShow] = useState(false)\n  const [blockTitle, setBlockTitle] = useState('')\n\n  const currentState = useSelector(state => state.dnd)\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n  const saveBlock = () => {\n    const blockId = uniqid()\n    const newBlock = {\n      [blockId]: {\n        id: blockId,\n        title: blockTitle,\n        linksIds: [],\n      },\n    }\n    const objToArr = Object.entries(newBlock)\n    const blockKey = objToArr[0][0]\n    const blockBody = objToArr[0][1]\n\n    dispatch(addBlock({ blockKey, blockBody }))\n    setBlockTitle('')\n    setShow(false)\n  }\n\n\n  return (\n    <>\n      <StyledBadgeDiv>\n        <StyledBage\n          pill\n          variant=\"light\"\n          onClick={handleShow}\n          style={{ marginRight: '5px' }}\n        >\n          Create new block\n        </StyledBage>\n      </StyledBadgeDiv>\n\n      <StyledModal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Please, enter title for your new block</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon1\">Title</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              aria-describedby=\"basic-addon1\"\n              onChange={e => setBlockTitle(e.target.value)}\n              value={blockTitle}\n            />\n          </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={saveBlock}>\n            Create block\n          </Button>\n        </Modal.Footer>\n      </StyledModal>\n    </>\n  );\n}\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport styled from 'styled-components'\n\nimport Column from './Column'\nimport {\n  moveColumn,\n  moveLinkInsideColumn,\n  startMoveLinkBetweenColumns,\n  finishMoveLinkBetweenColumns,\n} from '../store/actions/dndActions'\n\nimport SetBlockTitleModal from './modals/SetBlockTitleModal';\n\nconst Container = styled.div`\n  display: flex;\n`\n\nexport default function MainPage() {\n  const [startColumnIndex, setStartColumnIndex] = useState()\n  const [isSetBlockTitleModalShow, setBlockTitleModalShow] = useState(false)\n\n  const data = useSelector(state => state.dnd)\n\n  const dispatch = useDispatch()\n\n  \n  const onDragStart = (start) => {\n    const startColumn = data.columnOrder.indexOf(start.source.droppableId)\n    setStartColumnIndex(startColumn)\n  }\n  const onDragUpdate = (update) => {\n    const { destination } = update\n  }\n\n  const onDragEnd = (result) => {\n\n    setStartColumnIndex(null)\n\n    const {destination, source, draggableId, type} = result \n    if (!destination) {\n      return\n    }\n\n    if(destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    if(type === 'column') {\n      const newColumnOrder = Array.from(data.columnOrder)\n      newColumnOrder.splice(source.index, 1)\n      newColumnOrder.splice(destination.index, 0, draggableId)\n      dispatch(moveColumn(newColumnOrder))\n      return\n    }\n    \n    const start = data.columns[source.droppableId]\n    const finish = data.columns[destination.droppableId]\n    if(start === finish){\n      const newLinksIds = Array.from(start.linksIds)\n      newLinksIds.splice(source.index, 1)\n      newLinksIds.splice(destination.index, 0, draggableId)\n      dispatch(moveLinkInsideColumn(start.id, newLinksIds))\n      return\n    }\n\n    const startLinksIds = Array.from(start.linksIds)\n    startLinksIds.splice(source.index, 1)\n    const finishLinksIds = Array.from(finish.linksIds)\n    finishLinksIds.splice(destination.index, 0, draggableId)\n    dispatch(startMoveLinkBetweenColumns(start.id, startLinksIds))\n    dispatch(finishMoveLinkBetweenColumns(finish.id, finishLinksIds))\n  }\n\n  return (\n    <DragDropContext\n      onDragStart={onDragStart}\n      onDragUpdate={onDragUpdate}\n      onDragEnd={onDragEnd}\n    >\n      <SetBlockTitleModal />\n      <Droppable\n        droppableId=\"all-columns\"\n        direction=\"horizontal\"\n        type=\"column\"\n      >\n        {provided => (\n          <Container\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          >\n            {data.columnOrder.map((columnId, index) => {\n              const column = data.columns[columnId]\n              const links = column.linksIds.map(linkId => data.links[linkId])\n\n              return (\n                <Column\n                  key={column.id}\n                  column={column}\n                  links={links}\n                  index={index}\n                />\n              )\n            })}\n            {provided.placeholder}\n          </Container>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}\n","const content = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_COLUMN':\n      return {\n        ...state,\n        columnName: action.payload,\n      }\n    case 'ADD_LINK_DESCRIPTION':\n      return {\n        ...state,\n        linkDescription: action.payload,\n      }\n    case 'ADD_LINK':\n      return {\n        ...state,\n        link: action.link,\n      } \n    default:\n      return state\n  }\n}\nexport default content\n","import CON from '../constants'\n\nconst initialState = {\n  token: '',\n  isModalShow: false,\n  registerError: '',\n  authError: '',\n  cookies: '',\n}\n\nconst registration = (state = initialState, action) => {\n  switch (action.type) {\n    case (CON.REGISTRATION_START):\n      return {\n        ...state,\n        token: 'pending',\n      }\n    case (CON.REGISTRATION_SUCCESS):\n      return {\n        ...state,\n        token: `${action.payload.token}`,\n        cookies: action.payload.cookies,\n        \n      }\n    case (CON.REGISTRATION_FAILURE):\n      return {\n        ...state,\n        registerError: action.payload,\n      }\n\n    case (CON.AUTHORIZATION_START):\n      return {\n        ...state,\n        token: 'pending',\n      }\n/*     case (CON.AUTHORIZATION_SUCCESS):\n      return {\n        ...state,\n        token: `${action.payload.token}`,\n        cookies: action.payload.cookies,\n        \n      } */\n    case (CON.AUTHORIZATION_FAILURE):\n      return {\n        ...state,\n        authError: action.payload,\n      }\n\n\n    case (CON.SIGN_MODAL_SHOW):\n      return {\n        ...state,\n        isModalShow: true,\n      }\n    case (CON.SIGN_MODAL_HIDE): \n      return {\n        ...state,\n        isModalShow: false,\n      }\n    case (CON.SIGN_OUT):\n      return {\n        ...state,\n        token: '',\n        ...initialState,\n      }\n    case (CON.TRIM_ERROR_MESSAGE):\n      return {\n        ...state,\n        registerError: '', \n      }   \n    default:\n      return state\n  }\n}\n\nexport default registration\n","\nconst userStateReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_USER_DATA':\n      return {\n        ...state, ...action.payload,\n      }\n    default:\n      return state\n  }\n}\nexport default userStateReducer\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport dnd from './reducers/dndReducer'\nimport content from './reducers/contentReducer'\nimport registration from './reducers/authReducer'\nimport userStateReducer from './reducers/userStateReducer'\n\nconst rootReducer = combineReducers({ dnd, content, registration, userStateReducer })\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport { CookiesProvider } from 'react-cookie'\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nimport App from './components/App'\nimport store from './store'\n\nReactDOM.render(\n  <GoogleReCaptchaProvider\n    reCaptchaKey=\"6Ld3hswUAAAAALKq-tkiTvjdMZYjxbTcN5IbCZQk\"\n    language=\"en\"\n  >\n    <Provider store={store}>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </Provider>\n  </GoogleReCaptchaProvider>,\n  document.getElementById('root'),\n)\n","import React, { useState, useEffect } from 'react'\nimport AuthLogModal from './modals/AuthLogModal'\nimport MainPage from './MainPage'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { useCookies } from 'react-cookie'\nimport { authorization, hideSignModal } from '../store/actions/authRegActions'\n\nexport default function App() {\n  const [modalShow, setModalShow] = useState(true);\n  const [isFetchData, setFetchData] = useState(true)\n  const [isShowSpinner, setShowSpinner] = useState(false)\n  const AuthRegModalState = useSelector(state => state.registration.isModalShow)\n\n  const dispatch = useDispatch()\n  const [cookies] = useCookies()\n  const { linkBoxName, linkBoxPass } = cookies\n\n  useEffect(() => {\n    if(linkBoxName && linkBoxPass && isFetchData) {\n      const logName = linkBoxName\n      const logPass = linkBoxPass\n      \n      dispatch(authorization({ logName, logPass }))\n      setModalShow(false)\n      setFetchData(false)\n    }   \n  }, [])\n\n  const hideModal = () => {\n    dispatch(hideSignModal())\n    setModalShow(false)\n  }\n  return (\n    <>\n      <AuthLogModal\n        show={modalShow || AuthRegModalState}\n        onHide={hideModal}\n        setModalShow={setModalShow}\n      />\n      {\n\n      }\n      <MainPage />\n    </>\n  );\n}\n"],"sourceRoot":""}